/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mapzen.tangram;

public enum DebugFlags {
    freeze_tiles(0),
    proxy_colors,
    tile_bounds,
    tile_infos,
    labels;

    public final int swigValue() {
        return swigValue;
    }

    public static DebugFlags swigToEnum(int swigValue) {
        DebugFlags[] swigValues = DebugFlags.class.getEnumConstants();
        if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
            return swigValues[swigValue];
        for (DebugFlags swigEnum : swigValues)
            if (swigEnum.swigValue == swigValue)
                return swigEnum;
        throw new IllegalArgumentException("No enum " + DebugFlags.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private DebugFlags() {
        this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private DebugFlags(int swigValue) {
        this.swigValue = swigValue;
        SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private DebugFlags(DebugFlags swigEnum) {
        this.swigValue = swigEnum.swigValue;
        SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
        private static int next = 0;
    }
}

